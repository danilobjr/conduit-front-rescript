// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Text from "../text/Text.bs.js";
import * as CssJs from "bs-css-emotion/src/CssJs.bs.js";
import * as Theme from "../../Theme.bs.js";
import * as React from "react";

var title = CssJs.style([
      CssJs.color(CssJs.hex(Theme.Colors.black)),
      CssJs.fontSize(CssJs.rem(1.3)),
      CssJs.fontWeight({
            NAME: "num",
            VAL: 500
          }),
      CssJs.lineHeight(CssJs.rem(2.4)),
      CssJs.letterSpacing({
            NAME: "percent",
            VAL: -2.0
          })
    ]);

var h1 = CssJs.style([
      CssJs.color(CssJs.hex(Theme.Colors.neutral)),
      CssJs.fontSize(CssJs.rem(3.6)),
      CssJs.fontWeight({
            NAME: "num",
            VAL: 500
          }),
      CssJs.letterSpacing({
            NAME: "percent",
            VAL: -2.0
          })
    ]);

var h2 = CssJs.style([
      CssJs.color(CssJs.hex(Theme.Colors.neutral)),
      CssJs.fontSize(CssJs.rem(2.8)),
      CssJs.fontWeight({
            NAME: "num",
            VAL: 500
          }),
      CssJs.letterSpacing({
            NAME: "percent",
            VAL: -2.0
          })
    ]);

var h3 = CssJs.style([
      CssJs.color(CssJs.hex(Theme.Colors.neutral)),
      CssJs.fontSize(CssJs.rem(2.3)),
      CssJs.fontWeight({
            NAME: "num",
            VAL: 500
          }),
      CssJs.letterSpacing({
            NAME: "percent",
            VAL: -2.0
          })
    ]);

var h4 = CssJs.style([
      CssJs.color(CssJs.hex(Theme.Colors.neutral)),
      CssJs.fontSize(CssJs.rem(1.6)),
      CssJs.fontWeight({
            NAME: "num",
            VAL: 500
          }),
      CssJs.letterSpacing({
            NAME: "percent",
            VAL: -2.0
          })
    ]);

var h5 = CssJs.style([
      CssJs.color(CssJs.hex(Theme.Colors.neutral)),
      CssJs.fontSize(CssJs.rem(1.2)),
      CssJs.fontWeight({
            NAME: "num",
            VAL: 500
          }),
      CssJs.letterSpacing({
            NAME: "percent",
            VAL: -2.0
          })
    ]);

var h6 = CssJs.style([
      CssJs.color(CssJs.hex(Theme.Colors.neutral)),
      CssJs.fontSize(CssJs.rem(0.9)),
      CssJs.fontWeight({
            NAME: "num",
            VAL: 500
          }),
      CssJs.letterSpacing({
            NAME: "percent",
            VAL: -2.0
          })
    ]);

var text1 = CssJs.style([
      CssJs.color(CssJs.hex(Theme.Colors.neutral200)),
      CssJs.fontSize(CssJs.rem(1.2)),
      CssJs.lineHeight(CssJs.rem(1.9))
    ]);

var text2 = CssJs.style([
      CssJs.color(CssJs.hex(Theme.Colors.neutral200)),
      CssJs.lineHeight(CssJs.rem(1.8))
    ]);

var text3 = CssJs.style([
      CssJs.color(CssJs.hex(Theme.Colors.neutral200)),
      CssJs.fontSize(CssJs.rem(0.8)),
      CssJs.lineHeight(CssJs.rem(1.2))
    ]);

var text4 = CssJs.style([
      CssJs.color(CssJs.hex(Theme.Colors.neutral200)),
      CssJs.fontSize(CssJs.rem(0.7)),
      CssJs.lineHeight(CssJs.rem(1.1))
    ]);

var TypographyCss = {
  title: title,
  h1: h1,
  h2: h2,
  h3: h3,
  h4: h4,
  h5: h5,
  h6: h6,
  text1: text1,
  text2: text2,
  text3: text3,
  text4: text4
};

function Typography(Props) {
  var children = Props.children;
  var variant = Props.variant;
  switch (variant) {
    case /* Title */0 :
        return React.createElement("h1", {
                    className: title
                  }, React.createElement($$Text.make, {
                        children: children
                      }));
    case /* H1 */1 :
        return React.createElement("h1", {
                    className: h1
                  }, React.createElement($$Text.make, {
                        children: children
                      }));
    case /* H2 */2 :
        return React.createElement("h2", {
                    className: h2
                  }, React.createElement($$Text.make, {
                        children: children
                      }));
    case /* H3 */3 :
        return React.createElement("h3", {
                    className: h3
                  }, React.createElement($$Text.make, {
                        children: children
                      }));
    case /* H4 */4 :
        return React.createElement("h4", {
                    className: h4
                  }, React.createElement($$Text.make, {
                        children: children
                      }));
    case /* H5 */5 :
        return React.createElement("h5", {
                    className: h5
                  }, React.createElement($$Text.make, {
                        children: children
                      }));
    case /* H6 */6 :
        return React.createElement("h6", {
                    className: h6
                  }, React.createElement($$Text.make, {
                        children: children
                      }));
    case /* Text1 */7 :
        return React.createElement("span", {
                    className: text1
                  }, React.createElement($$Text.make, {
                        children: children
                      }));
    case /* Text2 */8 :
        return React.createElement("span", {
                    className: text2
                  }, React.createElement($$Text.make, {
                        children: children
                      }));
    case /* Text3 */9 :
        return React.createElement("span", {
                    className: text3
                  }, React.createElement($$Text.make, {
                        children: children
                      }));
    case /* Text4 */10 :
        return React.createElement("span", {
                    className: text4
                  }, React.createElement($$Text.make, {
                        children: children
                      }));
    
  }
}

var make = Typography;

export {
  TypographyCss ,
  make ,
  
}
/* title Not a pure module */
